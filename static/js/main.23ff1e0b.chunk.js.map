{"version":3,"sources":["sleigh.svg","present.svg","snow.svg","audio/glitter.mp3","audio/1.mp3","audio/2.mp3","audio/3.mp3","audio/4.mp3","audio/5.mp3","audio/6.mp3","audio/7.mp3","audio/jb1.mp3","audio/jb2.mp3","audio/jb3.mp3","audio/jb4.mp3","audio/jb5.mp3","audio/jb6.mp3","audio/jb7.mp3","audio/jb8.mp3","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","numberArray","i","push","window","onbeforeunload","sound","weWish1","weWish2","weWish3","weWish4","weWish5","weWish6","weWish7","jb1","jb2","jb3","jb4","jb5","jb6","jb7","jb8","App","state","usedNumbers","availableNumbers","currentNumber","animations","button","sleigh","present","opacity","display","playStatus","song","glitter","soundNumber","pickRandomNumber","shuffledArray","_this","shuffle","newAvailableNumbers","slice","length","setState","number","setTimeout","array","temporaryValue","randomIndex","currentIndex","Math","floor","random","resetAnimations","newUsedNumbers","speed","_this$state","this","console","log","react_default","a","createElement","className","onClick","style","animation","src","id","map","snow","lib_default","url","playbackRate","Component","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.23ff1e0b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/sleigh.a1326e45.svg\";","module.exports = __webpack_public_path__ + \"static/media/present.ddfb8f45.svg\";","module.exports = __webpack_public_path__ + \"static/media/snow.14206736.svg\";","module.exports = __webpack_public_path__ + \"static/media/glitter.f8664527.mp3\";","module.exports = __webpack_public_path__ + \"static/media/1.4c11b907.mp3\";","module.exports = __webpack_public_path__ + \"static/media/2.c8407256.mp3\";","module.exports = __webpack_public_path__ + \"static/media/3.51d2d182.mp3\";","module.exports = __webpack_public_path__ + \"static/media/4.4a1321e5.mp3\";","module.exports = __webpack_public_path__ + \"static/media/5.840533a2.mp3\";","module.exports = __webpack_public_path__ + \"static/media/6.307c23c5.mp3\";","module.exports = __webpack_public_path__ + \"static/media/7.27851eb6.mp3\";","module.exports = __webpack_public_path__ + \"static/media/jb1.c4acf28d.mp3\";","module.exports = __webpack_public_path__ + \"static/media/jb2.c3d9567e.mp3\";","module.exports = __webpack_public_path__ + \"static/media/jb3.9d87a5d8.mp3\";","module.exports = __webpack_public_path__ + \"static/media/jb4.25e0a523.mp3\";","module.exports = __webpack_public_path__ + \"static/media/jb5.e061d0c1.mp3\";","module.exports = __webpack_public_path__ + \"static/media/jb6.21d05b3a.mp3\";","module.exports = __webpack_public_path__ + \"static/media/jb7.168540e4.mp3\";","module.exports = __webpack_public_path__ + \"static/media/jb8.ccf30ec9.mp3\";","import React, { Component } from 'react';\nimport sleigh from './sleigh.svg';\nimport present from './present.svg';\nimport snow from './snow.svg';\nimport './App.css';\nimport Sound from 'react-sound';\n\nimport glitter from './audio/glitter.mp3'\n\nimport weWish1 from './audio/1.mp3'\nimport weWish2 from './audio/2.mp3'\nimport weWish3 from './audio/3.mp3'\nimport weWish4 from './audio/4.mp3'\nimport weWish5 from './audio/5.mp3'\nimport weWish6 from './audio/6.mp3'\nimport weWish7 from './audio/7.mp3'\n\nimport jb1 from './audio/jb1.mp3'\nimport jb2 from './audio/jb2.mp3'\nimport jb3 from './audio/jb3.mp3'\nimport jb4 from './audio/jb4.mp3'\nimport jb5 from './audio/jb5.mp3'\nimport jb6 from './audio/jb6.mp3'\nimport jb7 from './audio/jb7.mp3'\nimport jb8 from './audio/jb8.mp3'\n\nlet numberArray = []\nfor (let i = 1; i <= 50; i++) {\n  numberArray.push(i);\n}\n\n// prevent window navigation\nwindow.onbeforeunload = function() {\n  return \"\";\n}\n\nconst sound = [\n  weWish1,\n  weWish2,\n  weWish3,\n  weWish4,\n  weWish5,\n  weWish6,\n  weWish7,\n  jb1,\n  jb2,\n  jb3,\n  jb4,\n  jb5,\n  jb6,\n  jb7,\n  jb8,\n]\n\nclass App extends Component {\n  state = {\n    usedNumbers: [],\n    availableNumbers: numberArray,\n    currentNumber: null,\n    animations: {\n      button: null,\n      sleigh: null,\n      present: null,\n    },\n    opacity: {},\n    display: {},\n    playStatus: {\n      song: 'STOPPED',\n      glitter: 'STOPPED',\n    },\n    soundNumber: -1,\n  }\n\n  pickRandomNumber = () => {\n    const shuffledArray = this.shuffle(this.state.availableNumbers)\n    const newAvailableNumbers = shuffledArray.slice(1, shuffledArray.length)\n    const soundNumber = this.state.soundNumber < sound.length ? this.state.soundNumber + 1 : 0\n \n    this.setState({\n      currentNumber: shuffledArray[0],\n      availableNumbers: newAvailableNumbers,\n      animations: {\n        button: 'buttonHide 2s',\n        sleigh: 'sleighpath 4s ease 0s forwards',\n        present: 'presentgrowth 2s ease-in 3.2s',\n        number: 'numberAppear 2s ease-in 5.2s',\n      },\n      display: {\n        present: 'block',\n        number: 'block',\n      },\n      playStatus: {\n        song: 'PLAYING',\n        glitter: 'STOPPED',\n      },\n      soundNumber,\n    })\n\n    setTimeout(() => {\n      this.setState({\n        opacity: {\n          button: 0\n        },\n        display: {\n          present: 'block',\n          number: 'block',\n          button: 'none',\n        }\n      })\n    }, 1000)\n\n    setTimeout(() => {\n      this.setState({\n        opacity: {\n          button: 0,\n          number: 1,\n        },\n      })\n    }, 5500)\n\n\n  }\n\n  shuffle = (array) => {\n    var currentIndex = array.length, temporaryValue, randomIndex;\n  \n    while (0 !== currentIndex) {\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -= 1;\n      temporaryValue = array[currentIndex];\n      array[currentIndex] = array[randomIndex];\n      array[randomIndex] = temporaryValue;\n    }\n  \n    return array;\n  }\n\n  resetAnimations = () => {\n    const newUsedNumbers = this.state.usedNumbers.slice();\n    newUsedNumbers.push(this.state.currentNumber);\n    this.setState({\n      usedNumbers: newUsedNumbers,\n      animations: {\n        button: 'buttonAppear 1s',\n        sleigh: '',\n        present: '',\n        number: 'numberHide 1s',\n      },\n      display: {\n        present: 'none',\n        number: 'block',\n        button: 'inline',\n      },\n      opacity: {\n        button: 1\n      },\n      playStatus: {\n        song: 'STOPPED',\n        glitter: 'PLAYING',\n      },\n    })\n\n    setTimeout(() => {\n      this.setState({\n        display: {\n          present: 'none',\n          number: 'none',\n          button: 'inline',\n        }\n      })\n    }, 1000)\n  }\n\n  render() {\n\n    const {\n      usedNumbers,\n      animations,\n      opacity,\n      currentNumber,\n      display,\n      playStatus,\n      soundNumber,\n    } = this.state;\n\n    let speed;\n    console.log(soundNumber)\n    if (-1 < soundNumber && soundNumber <= 6) {\n      console.log('hello')\n      speed = 1.4\n    } else if (soundNumber > 6 && soundNumber <= 14) {\n      speed = 2\n    }\n\n    console.log(speed)\n\n    console.log(soundNumber)\n    return (\n      <div className=\"App\">\n        <h1>KNO's festlige Banko</h1>\n        <button\n          className=\"pickButton\"\n          onClick={this.pickRandomNumber}\n          style={{\n            animation: animations.button,\n            opacity: opacity.button,\n            display: display.button,\n          }}>Go!</button>\n        <div className=\"numberContainer\">\n          <div>\n          <span\n            onClick={this.resetAnimations}\n            className=\"number\"\n            style={{\n              animation: animations.number,\n              opacity: opacity.number,\n              display: display.number,\n            }}\n          >\n            {currentNumber}\n          </span>\n          <span \n            className=\"present\"\n            style={{\n              animation: animations.present,\n            }} >\n          <img\n            src={present}\n          />\n          </span>\n          </div>\n        </div>\n        <img src={sleigh} id=\"sleigh\" style={{ animation: animations.sleigh }} />\n        <div className=\"side\">\n          {\n            usedNumbers.map((number) => (\n              <div className=\"sideNumber\">{number}</div>\n            ))\n          }\n        </div>\n        <div className=\"bottom\">\n          <img src={snow} />\n          <span><i>Glædelig jul</i> fra Personaleforeningen, a part of UVdata, a part of KMD.</span>\n        </div>\n        <Sound url={glitter} playStatus={playStatus.glitter} playbackRate={2.5}/>\n        <Sound url={sound[soundNumber]} playStatus={playStatus.song} playbackRate={speed}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}